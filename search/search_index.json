{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Sign-Lanhuage-Genration-From-Video-YOLOV5","title":"Home"},{"location":"#sign-lanhuage-genration-from-video-yolov5","text":"","title":"Sign-Lanhuage-Genration-From-Video-YOLOV5"},{"location":"ModelTrainning/","text":"Training on custom data Go inside yolov5 and use below cmd.(if GPU not available then use device as CPU) python train.py --img 400 --batch 16 --epochs 3 --data data/custom_data.yaml --weights yolov5s.pt --cfg custom_yolov5s.yaml --device 0","title":"Trainning"},{"location":"ModelTrainning/#training-on-custom-data","text":"Go inside yolov5 and use below cmd.(if GPU not available then use device as CPU) python train.py --img 400 --batch 16 --epochs 3 --data data/custom_data.yaml --weights yolov5s.pt --cfg custom_yolov5s.yaml --device 0","title":"Training on custom data"},{"location":"environmentConfig/","text":"Environment config for Sign-Lanhuage-Genration-From-Video-YOLOV5 STEPS for environment creation and activation 01 Create a repository by using template repository. Step 02- Clone the repository Step 03- Create a conda environment after opening the repository in VSCODE conda create --prefix ./env python=3.7 -y Step 04- Activate environment conda activate ./env STEP 05- install the requirements pip install -r requirements.txt OR use init_setup.sh if not want run step 01 to step 05 in bash terminal use below command bash bash init_setup.sh clone the yolov5 in root dir git clone https://github.com/ultralytics/yolov5.git Now install the requirements or dependency for yolov5(go inside yolov5 folder and run below cmd) cd yolov5 pip install -r requirements.txt for pytorch cuda version use below cmd conda install pytorch torchvision torchaudio cudatoolkit=11.3 -c pytorch export the environment as conda.yaml for mlflow conda env export > conda.yaml","title":"environmentConfig"},{"location":"environmentConfig/#environment-config-for-sign-lanhuage-genration-from-video-yolov5","text":"","title":"Environment config for Sign-Lanhuage-Genration-From-Video-YOLOV5"},{"location":"environmentConfig/#steps-for-environment-creation-and-activation","text":"01 Create a repository by using template repository. Step 02- Clone the repository Step 03- Create a conda environment after opening the repository in VSCODE conda create --prefix ./env python=3.7 -y Step 04- Activate environment conda activate ./env STEP 05- install the requirements pip install -r requirements.txt OR use init_setup.sh if not want run step 01 to step 05 in bash terminal use below command bash bash init_setup.sh clone the yolov5 in root dir git clone https://github.com/ultralytics/yolov5.git Now install the requirements or dependency for yolov5(go inside yolov5 folder and run below cmd) cd yolov5 pip install -r requirements.txt for pytorch cuda version use below cmd conda install pytorch torchvision torchaudio cudatoolkit=11.3 -c pytorch export the environment as conda.yaml for mlflow conda env export > conda.yaml","title":"STEPS for environment creation and activation"},{"location":"mlflowSetup/","text":"MLFLOW setup install mlflow create MLproject file containing details of conda environments, below is the basic structure of file. name: project name conda_env: conda.yaml # Can have a docker_env instead of a conda_env, e.g. # docker_env: # image: mlflow-docker-example entry_points: main: command: \"python src/main.py\"","title":"mlflowSetup_setup"},{"location":"mlflowSetup/#mlflow-setup","text":"install mlflow create MLproject file containing details of conda environments, below is the basic structure of file. name: project name conda_env: conda.yaml # Can have a docker_env instead of a conda_env, e.g. # docker_env: # image: mlflow-docker-example entry_points: main: command: \"python src/main.py\"","title":"MLFLOW setup"},{"location":"modelConfigForCustomData/","text":"YOLOV5 training we are using yolov5s model for our project. So we will finetune it on our datasets. Steps 1) clone yolov5s in your project root dir git clone https://github.com/ultralytics/yolov5.git 2) Now take a copy of coco.yaml(yolov5/data/coco.yaml) and rename it custom_data.yaml. And provide your data path and no of class e.g: path: ../data/ # dataset root dir train: ../data/train/images # train images (relative to 'path') 118287 images val: ../data/test/ # val images (relative to 'path') 5000 images test: ../data/test/ # 20288 of 40670 images, submit to https://competitions.codalab.org/competitions/20794 # Classes nc: 6 # number of classes names: ['Hello', 'IloveYou', 'No', 'Please', 'Thanks', 'Yes'] 3) Take the copy of yolov5s.yaml (yolov5/models/yolos.yaml) and rename it custom_yolos.yaml. And change no of class as per your requirements e.g: nc: 6","title":"ModelConfigForCustomData"},{"location":"modelConfigForCustomData/#yolov5-training","text":"we are using yolov5s model for our project. So we will finetune it on our datasets. Steps 1) clone yolov5s in your project root dir git clone https://github.com/ultralytics/yolov5.git 2) Now take a copy of coco.yaml(yolov5/data/coco.yaml) and rename it custom_data.yaml. And provide your data path and no of class e.g: path: ../data/ # dataset root dir train: ../data/train/images # train images (relative to 'path') 118287 images val: ../data/test/ # val images (relative to 'path') 5000 images test: ../data/test/ # 20288 of 40670 images, submit to https://competitions.codalab.org/competitions/20794 # Classes nc: 6 # number of classes names: ['Hello', 'IloveYou', 'No', 'Please', 'Thanks', 'Yes'] 3) Take the copy of yolov5s.yaml (yolov5/models/yolos.yaml) and rename it custom_yolos.yaml. And change no of class as per your requirements e.g: nc: 6","title":"YOLOV5 training"}]}